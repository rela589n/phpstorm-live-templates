<templateSet group="laravel">
  <template name="one" value="public function $NAME$()&#10;{&#10;    return $this-&gt;hasOne($END$);&#10;}" description="hasOne" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="man" value="public function $NAME$()&#10;{&#10;    return $this-&gt;hasMany($END$);&#10;}" description="hasMany" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="bel" value="public function $NAME$()&#10;{&#10;    return $this-&gt;belongsTo($END$);&#10;}" description="belongsTo" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="belman" value="public function $NAME$()&#10;{&#10;    return $this-&gt;belongsToMany($END$);&#10;}" description="belongsToMany" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="bman" value="public function $NAME$()&#10;{&#10;    return $this-&gt;belongsToMany($END$);&#10;}" description="belongsToMany" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="acc" value="public function get$NAME$Attribute($PARAMETERS$)&#10;{&#10;    $END$&#10;}" description="accessor" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETERS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="scope" value="/**&#10; * @param  \Illuminate\Database\Eloquent\Builder  $query&#10; * @return \Illuminate\Database\Eloquent\Builder&#10; */&#10;public function scope$NAME$($query)&#10;{&#10;    return $query $END$;&#10;}&#10;" description="scope" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="morphM" value="public function $NAME$()&#10;{&#10;    return $this-&gt;morphMany($MODEL$, $TYPE$);&#10;}" description="morphMany" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MODEL" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="destroy" value="public function destroy($id)&#10;{&#10;    $CLASS$::destroy($id);&#10;    &#10;    return redirect()-&gt;route('$END$');&#10;}" description="Destroy action" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="mut" value="public function set$NAME$Attribute($PARAMETERS$)&#10;{&#10;    $this-&gt;attributes['$NAME$'] = $PARAMETERS$;&#10;}" description="mutator" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETERS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="manth" value="public function $NAME$()&#10;{&#10;    return $this-&gt;hasManyThrough($END$);&#10;}" description="hasManyThrough" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP Expression" value="false" />
      <option name="PHP Interface Member" value="false" />
      <option name="PHP Statement" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
</templateSet>